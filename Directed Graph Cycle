

/*Complete the function below*/

class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        // code here
        int ind[]=new int[V];
        Queue<Integer> q=new LinkedList<>();
        for(int i=0;i<V;i++)
        {
            for(int it:adj.get(i))
            {
               ind[it]++;
            }
        }
        for(int i=0;i<V;i++)
        {
            if(ind[i]==0)
            q.add(i);
            
        }
       
        int i=0;
        while(!q.isEmpty())
        {
            int node=q.peek();
           i++;
            q.remove();
            for(int it:adj.get(node))
            {
                ind[it]--;
                if(ind[it]==0)
                {
                    q.add(it);
                }
            }
        }
        
        
       if(i==V)
       return false;
       else 
       return true;
        
    }
}
