

class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<Integer> l=new ArrayList<>();
        boolean vis[]=new boolean[adj.size()];
       
        vis[0]=true;
        dfs(adj,0,l,vis);
        return l;
        
    }

    public static void dfs(ArrayList<ArrayList<Integer>> adj, int node,  ArrayList<Integer> l,boolean vis[])
{     l.add(node);
   vis[node]=true;
    for(int it:adj.get(node))
    {
        if(vis[it]==false)
        {
            vis[it]=true;
            dfs(adj,it,l,vis);
            
        
        }
    }
    
}
    
    
}
