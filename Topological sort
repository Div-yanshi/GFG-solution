

class Solution {
    // Function to return list containing vertices in Topological order.
    static ArrayList<Integer> topologicalSort(ArrayList<ArrayList<Integer>> adj) {
        // Your code here
        int v=adj.size();
        int vis[]=new int[v];
        Stack<Integer> st=new Stack<>();
        
        for(int i=0;i<v;i++)
        {
            if(vis[i]==0)
            dfs(i,adj,vis,st);
        }
        ArrayList<Integer> ans=new ArrayList<>();
        while(!st.isEmpty())
        {
           ans.add(st.peek());
            st.pop();
           
        }
       return ans;
    }
    static void dfs(int node,ArrayList<ArrayList<Integer>> adj,int vis[],Stack<Integer> st)
    {
        vis[node]=1;
        for(int it:adj.get(node))
        {
            if(vis[it]==0)
            {
                dfs(it,adj,vis,st);
                
            }}
            st.push(node);}
        
        
        
        
    
}
